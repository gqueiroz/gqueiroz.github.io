..
    This file is part of "Notas de Aula do Curso Bancos de Dados Geográficos".
    Copyright 2020-2022, Gilberto Queiroz.


.. include:: ../def.rst


.. _cap_estrutura_dados_postgis_spgist:

Árvores de Partição do Espaço no PostgreSQL com PostGIS
=======================================================


O PostGIS implementa o suporte a árvores de partição através do mecanismo SP-GiST do PostgreSQL. Para criar um **índice espacial** associado a uma **coluna geométrica**, podemos usar o comando ``CREATE INDEX`` com seguinte sintaxe:


.. code-block:: postgresql

    CREATE INDEX <nome-indice> ON <nome-tabela> USING SPGIST ( <coluna-geometrica> );


A opção ``USING SPGIST`` indica que o método de indexação a ser usado na criação do índice deverá ser baseado no SP-GiST. Desta forma, o índice criado será uma Quadtree no caso do tipo ``GEOMETRY`` do PostGIS.


Esse tipo de índice suporta os mesmos operadores listados na :numref:`Seção %s <cap_estrutura_dados_postgis_gist>`: ``<<``, ``>>``, ``<<|``, ``|>>``, ``&<``, ``&>``, ``&<``, ``|&>``, ``&&``, ``@``, ``~`` e ``~=``.


.. note::

    A sintaxe acima cria um índice bidimensional. Para criar um índice :math:`n\text{-dimensional}` para tipos geométricos 3D, com :math:`n > 2`, podemos utilizar a seguinte sintaxe:


    .. code-block:: postgresql

        CREATE INDEX <nome-indice> ON <nome-tabela> USING SPGIST (<coluna-geometrica> spgist_geometry_ops_nd);


.. tip::

    Ao criar um índice espacial, lembre-se de atualizar as estatísticas da tabela:


    .. code-block:: postgresql

        ANALYZE <nome-tabela>


    ou:


    .. code-block:: postgresql

        VACUUM ANALYZE <nome-tabela>


.. _cap_estrutura_dados_postgis_spgist_exercicios:

Exercícios
----------


**Exercício 1.** Vamos reindexar a tabela ``pts_pgis`` criada na :numref:`Seção %s <cap_estrutura_dados_postgis_gist_exercicios>` usando um índice do tipo SP-GiST sobre a coluna geométrica:


.. code-block:: sql

    DROP INDEX pts_pgis_geom_idx;


.. code-block:: postgresql

    ANALYZE pts_pgis;


.. code-block:: postgresql

    CREATE INDEX pts_pgis_geom_idx ON pts_pgis USING SPGIST ( geom );


.. code-block:: postgresql

    ANALYZE pts_pgis;


Vamos verificar novamente como a seguinte consulta é realizada:


.. code-block:: postgresql

    EXPLAIN ANALYZE
        SELECT * 
          FROM pts_pgis
         WHERE ST_Intersects( geom, ST_MakeEnvelope(1.0, 1.0, 2.0, 2.0, 4326) );

